<!--

    Copyright (C) 2012-2017 DataStax Inc.

    This software can be used solely with DataStax Enterprise. Please consult the license at
    http://www.datastax.com/terms/datastax-dse-driver-license-terms

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.datastax.dse</groupId>
        <artifactId>dse-java-driver-parent</artifactId>
        <version>1.3.0</version>
    </parent>

    <artifactId>dse-java-driver-core</artifactId>
    <name>DataStax Enterprise Java Driver - Core</name>
    <description>
        A driver for DataStax Enterprise (DSE)
        and Apache Cassandra 1.2+ clusters that works exclusively with the
        Cassandra Query Language version 3 (CQL3) and Cassandra's binary protocol,
        supporting DSE-specific features such as geospatial types, DSE Graph and DSE authentication.
    </description>

    <dependencies>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.jnr</groupId>
            <artifactId>jnr-ffi</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.jnr</groupId>
            <artifactId>jnr-posix</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.esri.geometry</groupId>
            <artifactId>esri-geometry-api</artifactId>
        </dependency>

        <!-- Compression libraries for the protocol. -->
        <!-- Each of them is only a mandatory runtime dependency if you want to use the compression it offers -->

        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- End of compression libraries -->

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.hdrhistogram</groupId>
            <artifactId>HdrHistogram</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scassandra</groupId>
            <artifactId>java-client</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative</artifactId>
            <classifier>${os.detected.classifier}</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-protocol-kerberos</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-interceptor-kerberos</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-protocol-ldap</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-ldif-partition</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-jdbm-partition</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-ldap-codec-standalone</artifactId>
            <version>1.0.0-M26</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <scope>test</scope>
            <version>${byteman.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.testng</groupId>
                    <artifactId>testng</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            We avoid packaging bundle because it does not play nicely with the shade plugin, see
            https://stackoverflow.com/questions/31262032/maven-shade-plugin-and-custom-packaging-type
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>com.datastax.driver.core</Bundle-SymbolicName>
                    </instructions>
                    <!--
                    Prevent customized manifest entries from the project's maven-jar-plugin configuration from being read, see
                    http://apache-felix.18485.x6.nabble.com/how-lt-manifestLocation-gt-is-used-in-maven-bundle-plugin-td4835566.html
                    -->
                    <archive>
                        <forced>true</forced>
                    </archive>
                </configuration>
                <executions>
                    <!--
                      Default configuration, used by the `bundle` goal that is implicitly bound to the `package` phase
                      (because the project uses the `bundle` packaging)
                      This generates the manifest for the 'shade-excluding-netty' artifact.
                    -->
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                        <configuration>
                            <manifestLocation>${project.build.outputDirectory}/META-INF</manifestLocation>
                            <instructions>
                                <Import-Package>
                                    <!-- JNR does not provide OSGi bundles, so exclude it; the driver can live without it -->
                                    <![CDATA[
                                    com.google.common.*;version="[16.0.1,22)",
                                    !jnr.*,
                                    !com.fasterxml.jackson.*,
                                    !com.esri.core.geometry.*,
                                    !org.json.*,
                                    !org.codehaus.jackson.*,
                                    ,*
                                ]]></Import-Package>
                            </instructions>
                        </configuration>
                    </execution>
                    <!-- Alternate execution to generate the manifest for the 'shade-including-netty' artifact -->
                    <execution>
                        <id>bundle-manifest-shaded</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                        <configuration>
                            <manifestLocation>${project.build.directory}/META-INF-shaded</manifestLocation>
                            <instructions>
                                <Import-Package>
                                    <!--
                                    JNR does not provide OSGi bundles, so exclude it; the driver can live without it
                                    Explicitly import javax.security.cert because it's required by Netty, but Netty has been explicitly excluded
                                    -->
                                    <![CDATA[
                                        com.google.common.*;version="[16.0.1,22)",
                                        !jnr.*,
                                        !com.fasterxml.jackson.*,
                                        !com.esri.core.geometry.*,
                                        !org.json.*,
                                        !org.codehaus.jackson.*,
                                        !io.netty.*,
                                        javax.security.cert,
                                        *
                                    ]]></Import-Package>
                                <Private-Package>com.datastax.shaded.*</Private-Package>
                            </instructions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <!-- Shade Jackson and ESRI, but not Netty. This is the default artifact. -->
                    <execution>
                        <id>shade-excluding-netty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>com.fasterxml.jackson.core:*</include>
                                    <include>com.esri.geometry:*</include>
                                    <include>org.json:*</include>
                                    <include>org.codehaus.jackson:*</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>com.fasterxml.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.jackson</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.esri.core.geometry</pattern>
                                    <shadedPattern>com.datastax.shaded.esri</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.json</pattern>
                                    <shadedPattern>com.datastax.shaded.json</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.codehaus.jackson</shadedPattern>
                                </relocation>
                            </relocations>
                            <filters>
                                <filter>
                                    <artifact>com.fasterxml.jackson.core:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>META-INF/services/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>com.esri.geometry:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>META-INF/services/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                    <!--
                      Shade Jackson, ESRI and Netty. This is the alternate artifact that is attached with the 'shaded'
                      classifier.
                    -->
                    <execution>
                        <id>shade-including-netty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <artifactSet>
                                <includes>
                                    <include>io.netty:*</include>
                                    <include>com.fasterxml.jackson.core:*</include>
                                    <include>com.esri.geometry:*</include>
                                    <include>org.json:*</include>
                                    <include>org.codehaus.jackson:*</include>
                                </includes>
                                <excludes>
                                    <exclude>io.netty:netty-transport-native-epoll</exclude>
                                </excludes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>io.netty</pattern>
                                    <shadedPattern>com.datastax.shaded.netty</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.jackson</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.esri.core.geometry</pattern>
                                    <shadedPattern>com.datastax.shaded.esri</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.json</pattern>
                                    <shadedPattern>com.datastax.shaded.json</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.codehaus.jackson</shadedPattern>
                                </relocation>
                            </relocations>
                            <filters>
                                <filter>
                                    <artifact>com.fasterxml.jackson.core:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>META-INF/services/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>com.esri.geometry:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>META-INF/services/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resources>
                                        <resource>META-INF/MANIFEST.MF</resource>
                                        <resource>META-INF/io.netty.versions.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-buffer/pom.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-buffer/pom.xml</resource>
                                        <resource>META-INF/maven/io.netty/netty-codec/pom.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-codec/pom.xml</resource>
                                        <resource>META-INF/maven/io.netty/netty-common/pom.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-common/pom.xml</resource>
                                        <resource>META-INF/maven/io.netty/netty-handler/pom.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-handler/pom.xml</resource>
                                        <resource>META-INF/maven/io.netty/netty-transport/pom.properties</resource>
                                        <resource>META-INF/maven/io.netty/netty-transport/pom.xml</resource>
                                    </resources>
                                </transformer>
                                <!-- Pick up the alternate manifest that was generated by the alternate execution of the bundle plugin -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>META-INF/MANIFEST.MF</resource>
                                    <file>${project.build.directory}/META-INF-shaded/MANIFEST.MF</file>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <profiles>

        <profile>
            <id>isolated</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <includes>
                                <include>**/SSL*Test.java</include>
                                <include>**/ControlConnectionTest.java</include>
                                <include>**/ExtendedPeerCheckDisabledTest.java</include>
                                <include>**/UUIDsPID*.java</include>
                                <include>**/FrameLengthTest.java</include>
                                <include>**/HeapCompressionTest.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>

